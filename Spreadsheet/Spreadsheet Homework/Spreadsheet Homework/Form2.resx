<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>